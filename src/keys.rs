#![allow(dead_code, non_upper_case_globals)]

use xcb::x;

pub const XK_BackSpace: x::Keysym = 0xFF08;
pub const XK_Tab: x::Keysym = 0xFF09;
pub const XK_Linefeed: x::Keysym = 0xFF0A;
pub const XK_Clear: x::Keysym = 0xFF0B;
pub const XK_Return: x::Keysym = 0xFF0D;
pub const XK_Pause: x::Keysym = 0xFF13;
pub const XK_Scroll_Lock: x::Keysym = 0xFF14;
pub const XK_Sys_Req: x::Keysym = 0xFF15;
pub const XK_Escape: x::Keysym = 0xFF1B;
pub const XK_Delete: x::Keysym = 0xFFFF;
pub const XK_Multi_key: x::Keysym = 0xFF20;
pub const XK_Kanji: x::Keysym = 0xFF21;
pub const XK_Muhenkan: x::Keysym = 0xFF22;
pub const XK_Henkan_Mode: x::Keysym = 0xFF23;
pub const XK_Henkan: x::Keysym = 0xFF23;
pub const XK_Romaji: x::Keysym = 0xFF24;
pub const XK_Hiragana: x::Keysym = 0xFF25;
pub const XK_Katakana: x::Keysym = 0xFF26;
pub const XK_Hiragana_Katakana: x::Keysym = 0xFF27;
pub const XK_Zenkaku: x::Keysym = 0xFF28;
pub const XK_Hankaku: x::Keysym = 0xFF29;
pub const XK_Zenkaku_Hankaku: x::Keysym = 0xFF2A;
pub const XK_Touroku: x::Keysym = 0xFF2B;
pub const XK_Massyo: x::Keysym = 0xFF2C;
pub const XK_Kana_Lock: x::Keysym = 0xFF2D;
pub const XK_Kana_Shift: x::Keysym = 0xFF2E;
pub const XK_Eisu_Shift: x::Keysym = 0xFF2F;
pub const XK_Eisu_toggle: x::Keysym = 0xFF30;
pub const XK_Home: x::Keysym = 0xFF50;
pub const XK_Left: x::Keysym = 0xFF51;
pub const XK_Up: x::Keysym = 0xFF52;
pub const XK_Right: x::Keysym = 0xFF53;
pub const XK_Down: x::Keysym = 0xFF54;
pub const XK_Prior: x::Keysym = 0xFF55;
pub const XK_Page_Up: x::Keysym = 0xFF55;
pub const XK_Next: x::Keysym = 0xFF56;
pub const XK_Page_Down: x::Keysym = 0xFF56;
pub const XK_End: x::Keysym = 0xFF57;
pub const XK_Begin: x::Keysym = 0xFF58;
pub const XK_Win_L: x::Keysym = 0xFF5B;
pub const XK_Win_R: x::Keysym = 0xFF5C;
pub const XK_App: x::Keysym = 0xFF5D;
pub const XK_Select: x::Keysym = 0xFF60;
pub const XK_Print: x::Keysym = 0xFF61;
pub const XK_Execute: x::Keysym = 0xFF62;
pub const XK_Insert: x::Keysym = 0xFF63;
pub const XK_Undo: x::Keysym = 0xFF65;
pub const XK_Redo: x::Keysym = 0xFF66;
pub const XK_Menu: x::Keysym = 0xFF67;
pub const XK_Find: x::Keysym = 0xFF68;
pub const XK_Cancel: x::Keysym = 0xFF69;
pub const XK_Help: x::Keysym = 0xFF6A;
pub const XK_Break: x::Keysym = 0xFF6B;
pub const XK_Mode_switch: x::Keysym = 0xFF7E;
pub const XK_script_switch: x::Keysym = 0xFF7E;
pub const XK_Num_Lock: x::Keysym = 0xFF7F;
pub const XK_KP_Space: x::Keysym = 0xFF80;
pub const XK_KP_Tab: x::Keysym = 0xFF89;
pub const XK_KP_Enter: x::Keysym = 0xFF8D;
pub const XK_KP_F1: x::Keysym = 0xFF91;
pub const XK_KP_F2: x::Keysym = 0xFF92;
pub const XK_KP_F3: x::Keysym = 0xFF93;
pub const XK_KP_F4: x::Keysym = 0xFF94;
pub const XK_KP_Home: x::Keysym = 0xFF95;
pub const XK_KP_Left: x::Keysym = 0xFF96;
pub const XK_KP_Up: x::Keysym = 0xFF97;
pub const XK_KP_Right: x::Keysym = 0xFF98;
pub const XK_KP_Down: x::Keysym = 0xFF99;
pub const XK_KP_Prior: x::Keysym = 0xFF9A;
pub const XK_KP_Page_Up: x::Keysym = 0xFF9A;
pub const XK_KP_Next: x::Keysym = 0xFF9B;
pub const XK_KP_Page_Down: x::Keysym = 0xFF9B;
pub const XK_KP_End: x::Keysym = 0xFF9C;
pub const XK_KP_Begin: x::Keysym = 0xFF9D;
pub const XK_KP_Insert: x::Keysym = 0xFF9E;
pub const XK_KP_Delete: x::Keysym = 0xFF9F;
pub const XK_KP_Equal: x::Keysym = 0xFFBD;
pub const XK_KP_Multiply: x::Keysym = 0xFFAA;
pub const XK_KP_Add: x::Keysym = 0xFFAB;
pub const XK_KP_Separator: x::Keysym = 0xFFAC;
pub const XK_KP_Subtract: x::Keysym = 0xFFAD;
pub const XK_KP_Decimal: x::Keysym = 0xFFAE;
pub const XK_KP_Divide: x::Keysym = 0xFFAF;
pub const XK_KP_0: x::Keysym = 0xFFB0;
pub const XK_KP_1: x::Keysym = 0xFFB1;
pub const XK_KP_2: x::Keysym = 0xFFB2;
pub const XK_KP_3: x::Keysym = 0xFFB3;
pub const XK_KP_4: x::Keysym = 0xFFB4;
pub const XK_KP_5: x::Keysym = 0xFFB5;
pub const XK_KP_6: x::Keysym = 0xFFB6;
pub const XK_KP_7: x::Keysym = 0xFFB7;
pub const XK_KP_8: x::Keysym = 0xFFB8;
pub const XK_KP_9: x::Keysym = 0xFFB9;
pub const XK_F1: x::Keysym = 0xFFBE;
pub const XK_F2: x::Keysym = 0xFFBF;
pub const XK_F3: x::Keysym = 0xFFC0;
pub const XK_F4: x::Keysym = 0xFFC1;
pub const XK_F5: x::Keysym = 0xFFC2;
pub const XK_F6: x::Keysym = 0xFFC3;
pub const XK_F7: x::Keysym = 0xFFC4;
pub const XK_F8: x::Keysym = 0xFFC5;
pub const XK_F9: x::Keysym = 0xFFC6;
pub const XK_F10: x::Keysym = 0xFFC7;
pub const XK_F11: x::Keysym = 0xFFC8;
pub const XK_L1: x::Keysym = 0xFFC8;
pub const XK_F12: x::Keysym = 0xFFC9;
pub const XK_L2: x::Keysym = 0xFFC9;
pub const XK_F13: x::Keysym = 0xFFCA;
pub const XK_L3: x::Keysym = 0xFFCA;
pub const XK_F14: x::Keysym = 0xFFCB;
pub const XK_L4: x::Keysym = 0xFFCB;
pub const XK_F15: x::Keysym = 0xFFCC;
pub const XK_L5: x::Keysym = 0xFFCC;
pub const XK_F16: x::Keysym = 0xFFCD;
pub const XK_L6: x::Keysym = 0xFFCD;
pub const XK_F17: x::Keysym = 0xFFCE;
pub const XK_L7: x::Keysym = 0xFFCE;
pub const XK_F18: x::Keysym = 0xFFCF;
pub const XK_L8: x::Keysym = 0xFFCF;
pub const XK_F19: x::Keysym = 0xFFD0;
pub const XK_L9: x::Keysym = 0xFFD0;
pub const XK_F20: x::Keysym = 0xFFD1;
pub const XK_L10: x::Keysym = 0xFFD1;
pub const XK_F21: x::Keysym = 0xFFD2;
pub const XK_R1: x::Keysym = 0xFFD2;
pub const XK_F22: x::Keysym = 0xFFD3;
pub const XK_R2: x::Keysym = 0xFFD3;
pub const XK_F23: x::Keysym = 0xFFD4;
pub const XK_R3: x::Keysym = 0xFFD4;
pub const XK_F24: x::Keysym = 0xFFD5;
pub const XK_R4: x::Keysym = 0xFFD5;
pub const XK_F25: x::Keysym = 0xFFD6;
pub const XK_R5: x::Keysym = 0xFFD6;
pub const XK_F26: x::Keysym = 0xFFD7;
pub const XK_R6: x::Keysym = 0xFFD7;
pub const XK_F27: x::Keysym = 0xFFD8;
pub const XK_R7: x::Keysym = 0xFFD8;
pub const XK_F28: x::Keysym = 0xFFD9;
pub const XK_R8: x::Keysym = 0xFFD9;
pub const XK_F29: x::Keysym = 0xFFDA;
pub const XK_R9: x::Keysym = 0xFFDA;
pub const XK_F30: x::Keysym = 0xFFDB;
pub const XK_R10: x::Keysym = 0xFFDB;
pub const XK_F31: x::Keysym = 0xFFDC;
pub const XK_R11: x::Keysym = 0xFFDC;
pub const XK_F32: x::Keysym = 0xFFDD;
pub const XK_R12: x::Keysym = 0xFFDD;
pub const XK_F33: x::Keysym = 0xFFDE;
pub const XK_R13: x::Keysym = 0xFFDE;
pub const XK_F34: x::Keysym = 0xFFDF;
pub const XK_R14: x::Keysym = 0xFFDF;
pub const XK_F35: x::Keysym = 0xFFE0;
pub const XK_R15: x::Keysym = 0xFFE0;
pub const XK_Shift_L: x::Keysym = 0xFFE1;
pub const XK_Shift_R: x::Keysym = 0xFFE2;
pub const XK_Control_L: x::Keysym = 0xFFE3;
pub const XK_Control_R: x::Keysym = 0xFFE4;
pub const XK_Caps_Lock: x::Keysym = 0xFFE5;
pub const XK_Shift_Lock: x::Keysym = 0xFFE6;
pub const XK_Meta_L: x::Keysym = 0xFFE7;
pub const XK_Meta_R: x::Keysym = 0xFFE8;
pub const XK_Alt_L: x::Keysym = 0xFFE9;
pub const XK_Alt_R: x::Keysym = 0xFFEA;
pub const XK_Super_L: x::Keysym = 0xFFEB;
pub const XK_Super_R: x::Keysym = 0xFFEC;
pub const XK_Hyper_L: x::Keysym = 0xFFED;
pub const XK_Hyper_R: x::Keysym = 0xFFEE;
pub const XK_space: x::Keysym = 0x020;
pub const XK_exclam: x::Keysym = 0x021;
pub const XK_quotedbl: x::Keysym = 0x022;
pub const XK_numbersign: x::Keysym = 0x023;
pub const XK_dollar: x::Keysym = 0x024;
pub const XK_percent: x::Keysym = 0x025;
pub const XK_ampersand: x::Keysym = 0x026;
pub const XK_apostrophe: x::Keysym = 0x027;
pub const XK_quoteright: x::Keysym = 0x027;
pub const XK_parenleft: x::Keysym = 0x028;
pub const XK_parenright: x::Keysym = 0x029;
pub const XK_asterisk: x::Keysym = 0x02a;
pub const XK_plus: x::Keysym = 0x02b;
pub const XK_comma: x::Keysym = 0x02c;
pub const XK_minus: x::Keysym = 0x02d;
pub const XK_period: x::Keysym = 0x02e;
pub const XK_slash: x::Keysym = 0x02f;
pub const XK_0: x::Keysym = 0x030;
pub const XK_1: x::Keysym = 0x031;
pub const XK_2: x::Keysym = 0x032;
pub const XK_3: x::Keysym = 0x033;
pub const XK_4: x::Keysym = 0x034;
pub const XK_5: x::Keysym = 0x035;
pub const XK_6: x::Keysym = 0x036;
pub const XK_7: x::Keysym = 0x037;
pub const XK_8: x::Keysym = 0x038;
pub const XK_9: x::Keysym = 0x039;
pub const XK_colon: x::Keysym = 0x03a;
pub const XK_semicolon: x::Keysym = 0x03b;
pub const XK_less: x::Keysym = 0x03c;
pub const XK_equal: x::Keysym = 0x03d;
pub const XK_greater: x::Keysym = 0x03e;
pub const XK_question: x::Keysym = 0x03f;
pub const XK_at: x::Keysym = 0x040;
pub const XK_A: x::Keysym = 0x041;
pub const XK_B: x::Keysym = 0x042;
pub const XK_C: x::Keysym = 0x043;
pub const XK_D: x::Keysym = 0x044;
pub const XK_E: x::Keysym = 0x045;
pub const XK_F: x::Keysym = 0x046;
pub const XK_G: x::Keysym = 0x047;
pub const XK_H: x::Keysym = 0x048;
pub const XK_I: x::Keysym = 0x049;
pub const XK_J: x::Keysym = 0x04a;
pub const XK_K: x::Keysym = 0x04b;
pub const XK_L: x::Keysym = 0x04c;
pub const XK_M: x::Keysym = 0x04d;
pub const XK_N: x::Keysym = 0x04e;
pub const XK_O: x::Keysym = 0x04f;
pub const XK_P: x::Keysym = 0x050;
pub const XK_Q: x::Keysym = 0x051;
pub const XK_R: x::Keysym = 0x052;
pub const XK_S: x::Keysym = 0x053;
pub const XK_T: x::Keysym = 0x054;
pub const XK_U: x::Keysym = 0x055;
pub const XK_V: x::Keysym = 0x056;
pub const XK_W: x::Keysym = 0x057;
pub const XK_X: x::Keysym = 0x058;
pub const XK_Y: x::Keysym = 0x059;
pub const XK_Z: x::Keysym = 0x05a;
pub const XK_bracketleft: x::Keysym = 0x05b;
pub const XK_backslash: x::Keysym = 0x05c;
pub const XK_bracketright: x::Keysym = 0x05d;
pub const XK_asciicircum: x::Keysym = 0x05e;
pub const XK_underscore: x::Keysym = 0x05f;
pub const XK_grave: x::Keysym = 0x060;
pub const XK_quoteleft: x::Keysym = 0x060;
pub const XK_a: x::Keysym = 0x061;
pub const XK_b: x::Keysym = 0x062;
pub const XK_c: x::Keysym = 0x063;
pub const XK_d: x::Keysym = 0x064;
pub const XK_e: x::Keysym = 0x065;
pub const XK_f: x::Keysym = 0x066;
pub const XK_g: x::Keysym = 0x067;
pub const XK_h: x::Keysym = 0x068;
pub const XK_i: x::Keysym = 0x069;
pub const XK_j: x::Keysym = 0x06a;
pub const XK_k: x::Keysym = 0x06b;
pub const XK_l: x::Keysym = 0x06c;
pub const XK_m: x::Keysym = 0x06d;
pub const XK_n: x::Keysym = 0x06e;
pub const XK_o: x::Keysym = 0x06f;
pub const XK_p: x::Keysym = 0x070;
pub const XK_q: x::Keysym = 0x071;
pub const XK_r: x::Keysym = 0x072;
pub const XK_s: x::Keysym = 0x073;
pub const XK_t: x::Keysym = 0x074;
pub const XK_u: x::Keysym = 0x075;
pub const XK_v: x::Keysym = 0x076;
pub const XK_w: x::Keysym = 0x077;
pub const XK_x: x::Keysym = 0x078;
pub const XK_y: x::Keysym = 0x079;
pub const XK_z: x::Keysym = 0x07a;
pub const XK_braceleft: x::Keysym = 0x07b;
pub const XK_bar: x::Keysym = 0x07c;
pub const XK_braceright: x::Keysym = 0x07d;
pub const XK_asciitilde: x::Keysym = 0x07e;
pub const XK_nobreakspace: x::Keysym = 0x0a0;
pub const XK_exclamdown: x::Keysym = 0x0a1;
pub const XK_cent: x::Keysym = 0x0a2;
pub const XK_sterling: x::Keysym = 0x0a3;
pub const XK_currency: x::Keysym = 0x0a4;
pub const XK_yen: x::Keysym = 0x0a5;
pub const XK_brokenbar: x::Keysym = 0x0a6;
pub const XK_section: x::Keysym = 0x0a7;
pub const XK_diaeresis: x::Keysym = 0x0a8;
pub const XK_copyright: x::Keysym = 0x0a9;
pub const XK_ordfeminine: x::Keysym = 0x0aa;
pub const XK_guillemotleft: x::Keysym = 0x0ab;
pub const XK_notsign: x::Keysym = 0x0ac;
pub const XK_hyphen: x::Keysym = 0x0ad;
pub const XK_registered: x::Keysym = 0x0ae;
pub const XK_macron: x::Keysym = 0x0af;
pub const XK_degree: x::Keysym = 0x0b0;
pub const XK_plusminus: x::Keysym = 0x0b1;
pub const XK_twosuperior: x::Keysym = 0x0b2;
pub const XK_threesuperior: x::Keysym = 0x0b3;
pub const XK_acute: x::Keysym = 0x0b4;
pub const XK_mu: x::Keysym = 0x0b5;
pub const XK_paragraph: x::Keysym = 0x0b6;
pub const XK_periodcentered: x::Keysym = 0x0b7;
pub const XK_cedilla: x::Keysym = 0x0b8;
pub const XK_onesuperior: x::Keysym = 0x0b9;
pub const XK_masculine: x::Keysym = 0x0ba;
pub const XK_guillemotright: x::Keysym = 0x0bb;
pub const XK_onequarter: x::Keysym = 0x0bc;
pub const XK_onehalf: x::Keysym = 0x0bd;
pub const XK_threequarters: x::Keysym = 0x0be;
pub const XK_questiondown: x::Keysym = 0x0bf;
pub const XK_Agrave: x::Keysym = 0x0c0;
pub const XK_Aacute: x::Keysym = 0x0c1;
pub const XK_Acircumflex: x::Keysym = 0x0c2;
pub const XK_Atilde: x::Keysym = 0x0c3;
pub const XK_Adiaeresis: x::Keysym = 0x0c4;
pub const XK_Aring: x::Keysym = 0x0c5;
pub const XK_AE: x::Keysym = 0x0c6;
pub const XK_Ccedilla: x::Keysym = 0x0c7;
pub const XK_Egrave: x::Keysym = 0x0c8;
pub const XK_Eacute: x::Keysym = 0x0c9;
pub const XK_Ecircumflex: x::Keysym = 0x0ca;
pub const XK_Ediaeresis: x::Keysym = 0x0cb;
pub const XK_Igrave: x::Keysym = 0x0cc;
pub const XK_Iacute: x::Keysym = 0x0cd;
pub const XK_Icircumflex: x::Keysym = 0x0ce;
pub const XK_Idiaeresis: x::Keysym = 0x0cf;
pub const XK_ETH: x::Keysym = 0x0d0;
pub const XK_Eth: x::Keysym = 0x0d0;
pub const XK_Ntilde: x::Keysym = 0x0d1;
pub const XK_Ograve: x::Keysym = 0x0d2;
pub const XK_Oacute: x::Keysym = 0x0d3;
pub const XK_Ocircumflex: x::Keysym = 0x0d4;
pub const XK_Otilde: x::Keysym = 0x0d5;
pub const XK_Odiaeresis: x::Keysym = 0x0d6;
pub const XK_multiply: x::Keysym = 0x0d7;
pub const XK_Ooblique: x::Keysym = 0x0d8;
pub const XK_Ugrave: x::Keysym = 0x0d9;
pub const XK_Uacute: x::Keysym = 0x0da;
pub const XK_Ucircumflex: x::Keysym = 0x0db;
pub const XK_Udiaeresis: x::Keysym = 0x0dc;
pub const XK_Yacute: x::Keysym = 0x0dd;
pub const XK_THORN: x::Keysym = 0x0de;
pub const XK_Thorn: x::Keysym = 0x0de;
pub const XK_ssharp: x::Keysym = 0x0df;
pub const XK_agrave: x::Keysym = 0x0e0;
pub const XK_aacute: x::Keysym = 0x0e1;
pub const XK_acircumflex: x::Keysym = 0x0e2;
pub const XK_atilde: x::Keysym = 0x0e3;
pub const XK_adiaeresis: x::Keysym = 0x0e4;
pub const XK_aring: x::Keysym = 0x0e5;
pub const XK_ae: x::Keysym = 0x0e6;
pub const XK_ccedilla: x::Keysym = 0x0e7;
pub const XK_egrave: x::Keysym = 0x0e8;
pub const XK_eacute: x::Keysym = 0x0e9;
pub const XK_ecircumflex: x::Keysym = 0x0ea;
pub const XK_ediaeresis: x::Keysym = 0x0eb;
pub const XK_igrave: x::Keysym = 0x0ec;
pub const XK_iacute: x::Keysym = 0x0ed;
pub const XK_icircumflex: x::Keysym = 0x0ee;
pub const XK_idiaeresis: x::Keysym = 0x0ef;
pub const XK_eth: x::Keysym = 0x0f0;
pub const XK_ntilde: x::Keysym = 0x0f1;
pub const XK_ograve: x::Keysym = 0x0f2;
pub const XK_oacute: x::Keysym = 0x0f3;
pub const XK_ocircumflex: x::Keysym = 0x0f4;
pub const XK_otilde: x::Keysym = 0x0f5;
pub const XK_odiaeresis: x::Keysym = 0x0f6;
pub const XK_division: x::Keysym = 0x0f7;
pub const XK_oslash: x::Keysym = 0x0f8;
pub const XK_ugrave: x::Keysym = 0x0f9;
pub const XK_uacute: x::Keysym = 0x0fa;
pub const XK_ucircumflex: x::Keysym = 0x0fb;
pub const XK_udiaeresis: x::Keysym = 0x0fc;
pub const XK_yacute: x::Keysym = 0x0fd;
pub const XK_thorn: x::Keysym = 0x0fe;
pub const XK_ydiaeresis: x::Keysym = 0x0ff;
pub const XK_Aogonek: x::Keysym = 0x1a1;
pub const XK_breve: x::Keysym = 0x1a2;
pub const XK_Lstroke: x::Keysym = 0x1a3;
pub const XK_Lcaron: x::Keysym = 0x1a5;
pub const XK_Sacute: x::Keysym = 0x1a6;
pub const XK_Scaron: x::Keysym = 0x1a9;
pub const XK_Scedilla: x::Keysym = 0x1aa;
pub const XK_Tcaron: x::Keysym = 0x1ab;
pub const XK_Zacute: x::Keysym = 0x1ac;
pub const XK_Zcaron: x::Keysym = 0x1ae;
pub const XK_Zabovedot: x::Keysym = 0x1af;
pub const XK_aogonek: x::Keysym = 0x1b1;
pub const XK_ogonek: x::Keysym = 0x1b2;
pub const XK_lstroke: x::Keysym = 0x1b3;
pub const XK_lcaron: x::Keysym = 0x1b5;
pub const XK_sacute: x::Keysym = 0x1b6;
pub const XK_caron: x::Keysym = 0x1b7;
pub const XK_scaron: x::Keysym = 0x1b9;
pub const XK_scedilla: x::Keysym = 0x1ba;
pub const XK_tcaron: x::Keysym = 0x1bb;
pub const XK_zacute: x::Keysym = 0x1bc;
pub const XK_doubleacute: x::Keysym = 0x1bd;
pub const XK_zcaron: x::Keysym = 0x1be;
pub const XK_zabovedot: x::Keysym = 0x1bf;
pub const XK_Racute: x::Keysym = 0x1c0;
pub const XK_Abreve: x::Keysym = 0x1c3;
pub const XK_Lacute: x::Keysym = 0x1c5;
pub const XK_Cacute: x::Keysym = 0x1c6;
pub const XK_Ccaron: x::Keysym = 0x1c8;
pub const XK_Eogonek: x::Keysym = 0x1ca;
pub const XK_Ecaron: x::Keysym = 0x1cc;
pub const XK_Dcaron: x::Keysym = 0x1cf;
pub const XK_Dstroke: x::Keysym = 0x1d0;
pub const XK_Nacute: x::Keysym = 0x1d1;
pub const XK_Ncaron: x::Keysym = 0x1d2;
pub const XK_Odoubleacute: x::Keysym = 0x1d5;
pub const XK_Rcaron: x::Keysym = 0x1d8;
pub const XK_Uring: x::Keysym = 0x1d9;
pub const XK_Udoubleacute: x::Keysym = 0x1db;
pub const XK_Tcedilla: x::Keysym = 0x1de;
pub const XK_racute: x::Keysym = 0x1e0;
pub const XK_abreve: x::Keysym = 0x1e3;
pub const XK_lacute: x::Keysym = 0x1e5;
pub const XK_cacute: x::Keysym = 0x1e6;
pub const XK_ccaron: x::Keysym = 0x1e8;
pub const XK_eogonek: x::Keysym = 0x1ea;
pub const XK_ecaron: x::Keysym = 0x1ec;
pub const XK_dcaron: x::Keysym = 0x1ef;
pub const XK_dstroke: x::Keysym = 0x1f0;
pub const XK_nacute: x::Keysym = 0x1f1;
pub const XK_ncaron: x::Keysym = 0x1f2;
pub const XK_odoubleacute: x::Keysym = 0x1f5;
pub const XK_udoubleacute: x::Keysym = 0x1fb;
pub const XK_rcaron: x::Keysym = 0x1f8;
pub const XK_uring: x::Keysym = 0x1f9;
pub const XK_tcedilla: x::Keysym = 0x1fe;
pub const XK_abovedot: x::Keysym = 0x1ff;
pub const XK_Hstroke: x::Keysym = 0x2a1;
pub const XK_Hcircumflex: x::Keysym = 0x2a6;
pub const XK_Iabovedot: x::Keysym = 0x2a9;
pub const XK_Gbreve: x::Keysym = 0x2ab;
pub const XK_Jcircumflex: x::Keysym = 0x2ac;
pub const XK_hstroke: x::Keysym = 0x2b1;
pub const XK_hcircumflex: x::Keysym = 0x2b6;
pub const XK_idotless: x::Keysym = 0x2b9;
pub const XK_gbreve: x::Keysym = 0x2bb;
pub const XK_jcircumflex: x::Keysym = 0x2bc;
pub const XK_Cabovedot: x::Keysym = 0x2c5;
pub const XK_Ccircumflex: x::Keysym = 0x2c6;
pub const XK_Gabovedot: x::Keysym = 0x2d5;
pub const XK_Gcircumflex: x::Keysym = 0x2d8;
pub const XK_Ubreve: x::Keysym = 0x2dd;
pub const XK_Scircumflex: x::Keysym = 0x2de;
pub const XK_cabovedot: x::Keysym = 0x2e5;
pub const XK_ccircumflex: x::Keysym = 0x2e6;
pub const XK_gabovedot: x::Keysym = 0x2f5;
pub const XK_gcircumflex: x::Keysym = 0x2f8;
pub const XK_ubreve: x::Keysym = 0x2fd;
pub const XK_scircumflex: x::Keysym = 0x2fe;
pub const XK_kra: x::Keysym = 0x3a2;
pub const XK_kappa: x::Keysym = 0x3a2;
pub const XK_Rcedilla: x::Keysym = 0x3a3;
pub const XK_Itilde: x::Keysym = 0x3a5;
pub const XK_Lcedilla: x::Keysym = 0x3a6;
pub const XK_Emacron: x::Keysym = 0x3aa;
pub const XK_Gcedilla: x::Keysym = 0x3ab;
pub const XK_Tslash: x::Keysym = 0x3ac;
pub const XK_rcedilla: x::Keysym = 0x3b3;
pub const XK_itilde: x::Keysym = 0x3b5;
pub const XK_lcedilla: x::Keysym = 0x3b6;
pub const XK_emacron: x::Keysym = 0x3ba;
pub const XK_gcedilla: x::Keysym = 0x3bb;
pub const XK_tslash: x::Keysym = 0x3bc;
pub const XK_ENG: x::Keysym = 0x3bd;
pub const XK_eng: x::Keysym = 0x3bf;
pub const XK_Amacron: x::Keysym = 0x3c0;
pub const XK_Iogonek: x::Keysym = 0x3c7;
pub const XK_Eabovedot: x::Keysym = 0x3cc;
pub const XK_Imacron: x::Keysym = 0x3cf;
pub const XK_Ncedilla: x::Keysym = 0x3d1;
pub const XK_Omacron: x::Keysym = 0x3d2;
pub const XK_Kcedilla: x::Keysym = 0x3d3;
pub const XK_Uogonek: x::Keysym = 0x3d9;
pub const XK_Utilde: x::Keysym = 0x3dd;
pub const XK_Umacron: x::Keysym = 0x3de;
pub const XK_amacron: x::Keysym = 0x3e0;
pub const XK_iogonek: x::Keysym = 0x3e7;
pub const XK_eabovedot: x::Keysym = 0x3ec;
pub const XK_imacron: x::Keysym = 0x3ef;
pub const XK_ncedilla: x::Keysym = 0x3f1;
pub const XK_omacron: x::Keysym = 0x3f2;
pub const XK_kcedilla: x::Keysym = 0x3f3;
pub const XK_uogonek: x::Keysym = 0x3f9;
pub const XK_utilde: x::Keysym = 0x3fd;
pub const XK_umacron: x::Keysym = 0x3fe;
pub const XK_overline: x::Keysym = 0x47e;
pub const XK_kana_fullstop: x::Keysym = 0x4a1;
pub const XK_kana_openingbracket: x::Keysym = 0x4a2;
pub const XK_kana_closingbracket: x::Keysym = 0x4a3;
pub const XK_kana_comma: x::Keysym = 0x4a4;
pub const XK_kana_conjunctive: x::Keysym = 0x4a5;
pub const XK_kana_middledot: x::Keysym = 0x4a5;
pub const XK_kana_WO: x::Keysym = 0x4a6;
pub const XK_kana_a: x::Keysym = 0x4a7;
pub const XK_kana_i: x::Keysym = 0x4a8;
pub const XK_kana_u: x::Keysym = 0x4a9;
pub const XK_kana_e: x::Keysym = 0x4aa;
pub const XK_kana_o: x::Keysym = 0x4ab;
pub const XK_kana_ya: x::Keysym = 0x4ac;
pub const XK_kana_yu: x::Keysym = 0x4ad;
pub const XK_kana_yo: x::Keysym = 0x4ae;
pub const XK_kana_tsu: x::Keysym = 0x4af;
pub const XK_kana_tu: x::Keysym = 0x4af;
pub const XK_prolongedsound: x::Keysym = 0x4b0;
pub const XK_kana_A: x::Keysym = 0x4b1;
pub const XK_kana_I: x::Keysym = 0x4b2;
pub const XK_kana_U: x::Keysym = 0x4b3;
pub const XK_kana_E: x::Keysym = 0x4b4;
pub const XK_kana_O: x::Keysym = 0x4b5;
pub const XK_kana_KA: x::Keysym = 0x4b6;
pub const XK_kana_KI: x::Keysym = 0x4b7;
pub const XK_kana_KU: x::Keysym = 0x4b8;
pub const XK_kana_KE: x::Keysym = 0x4b9;
pub const XK_kana_KO: x::Keysym = 0x4ba;
pub const XK_kana_SA: x::Keysym = 0x4bb;
pub const XK_kana_SHI: x::Keysym = 0x4bc;
pub const XK_kana_SU: x::Keysym = 0x4bd;
pub const XK_kana_SE: x::Keysym = 0x4be;
pub const XK_kana_SO: x::Keysym = 0x4bf;
pub const XK_kana_TA: x::Keysym = 0x4c0;
pub const XK_kana_CHI: x::Keysym = 0x4c1;
pub const XK_kana_TI: x::Keysym = 0x4c1;
pub const XK_kana_TSU: x::Keysym = 0x4c2;
pub const XK_kana_TU: x::Keysym = 0x4c2;
pub const XK_kana_TE: x::Keysym = 0x4c3;
pub const XK_kana_TO: x::Keysym = 0x4c4;
pub const XK_kana_NA: x::Keysym = 0x4c5;
pub const XK_kana_NI: x::Keysym = 0x4c6;
pub const XK_kana_NU: x::Keysym = 0x4c7;
pub const XK_kana_NE: x::Keysym = 0x4c8;
pub const XK_kana_NO: x::Keysym = 0x4c9;
pub const XK_kana_HA: x::Keysym = 0x4ca;
pub const XK_kana_HI: x::Keysym = 0x4cb;
pub const XK_kana_FU: x::Keysym = 0x4cc;
pub const XK_kana_HU: x::Keysym = 0x4cc;
pub const XK_kana_HE: x::Keysym = 0x4cd;
pub const XK_kana_HO: x::Keysym = 0x4ce;
pub const XK_kana_MA: x::Keysym = 0x4cf;
pub const XK_kana_MI: x::Keysym = 0x4d0;
pub const XK_kana_MU: x::Keysym = 0x4d1;
pub const XK_kana_ME: x::Keysym = 0x4d2;
pub const XK_kana_MO: x::Keysym = 0x4d3;
pub const XK_kana_YA: x::Keysym = 0x4d4;
pub const XK_kana_YU: x::Keysym = 0x4d5;
pub const XK_kana_YO: x::Keysym = 0x4d6;
pub const XK_kana_RA: x::Keysym = 0x4d7;
pub const XK_kana_RI: x::Keysym = 0x4d8;
pub const XK_kana_RU: x::Keysym = 0x4d9;
pub const XK_kana_RE: x::Keysym = 0x4da;
pub const XK_kana_RO: x::Keysym = 0x4db;
pub const XK_kana_WA: x::Keysym = 0x4dc;
pub const XK_kana_N: x::Keysym = 0x4dd;
pub const XK_voicedsound: x::Keysym = 0x4de;
pub const XK_semivoicedsound: x::Keysym = 0x4df;
pub const XK_kana_switch: x::Keysym = 0xFF7E;
pub const XK_Arabic_comma: x::Keysym = 0x5ac;
pub const XK_Arabic_semicolon: x::Keysym = 0x5bb;
pub const XK_Arabic_question_mark: x::Keysym = 0x5bf;
pub const XK_Arabic_hamza: x::Keysym = 0x5c1;
pub const XK_Arabic_maddaonalef: x::Keysym = 0x5c2;
pub const XK_Arabic_hamzaonalef: x::Keysym = 0x5c3;
pub const XK_Arabic_hamzaonwaw: x::Keysym = 0x5c4;
pub const XK_Arabic_hamzaunderalef: x::Keysym = 0x5c5;
pub const XK_Arabic_hamzaonyeh: x::Keysym = 0x5c6;
pub const XK_Arabic_alef: x::Keysym = 0x5c7;
pub const XK_Arabic_beh: x::Keysym = 0x5c8;
pub const XK_Arabic_tehmarbuta: x::Keysym = 0x5c9;
pub const XK_Arabic_teh: x::Keysym = 0x5ca;
pub const XK_Arabic_theh: x::Keysym = 0x5cb;
pub const XK_Arabic_jeem: x::Keysym = 0x5cc;
pub const XK_Arabic_hah: x::Keysym = 0x5cd;
pub const XK_Arabic_khah: x::Keysym = 0x5ce;
pub const XK_Arabic_dal: x::Keysym = 0x5cf;
pub const XK_Arabic_thal: x::Keysym = 0x5d0;
pub const XK_Arabic_ra: x::Keysym = 0x5d1;
pub const XK_Arabic_zain: x::Keysym = 0x5d2;
pub const XK_Arabic_seen: x::Keysym = 0x5d3;
pub const XK_Arabic_sheen: x::Keysym = 0x5d4;
pub const XK_Arabic_sad: x::Keysym = 0x5d5;
pub const XK_Arabic_dad: x::Keysym = 0x5d6;
pub const XK_Arabic_tah: x::Keysym = 0x5d7;
pub const XK_Arabic_zah: x::Keysym = 0x5d8;
pub const XK_Arabic_ain: x::Keysym = 0x5d9;
pub const XK_Arabic_ghain: x::Keysym = 0x5da;
pub const XK_Arabic_tatweel: x::Keysym = 0x5e0;
pub const XK_Arabic_feh: x::Keysym = 0x5e1;
pub const XK_Arabic_qaf: x::Keysym = 0x5e2;
pub const XK_Arabic_kaf: x::Keysym = 0x5e3;
pub const XK_Arabic_lam: x::Keysym = 0x5e4;
pub const XK_Arabic_meem: x::Keysym = 0x5e5;
pub const XK_Arabic_noon: x::Keysym = 0x5e6;
pub const XK_Arabic_ha: x::Keysym = 0x5e7;
pub const XK_Arabic_heh: x::Keysym = 0x5e7;
pub const XK_Arabic_waw: x::Keysym = 0x5e8;
pub const XK_Arabic_alefmaksura: x::Keysym = 0x5e9;
pub const XK_Arabic_yeh: x::Keysym = 0x5ea;
pub const XK_Arabic_fathatan: x::Keysym = 0x5eb;
pub const XK_Arabic_dammatan: x::Keysym = 0x5ec;
pub const XK_Arabic_kasratan: x::Keysym = 0x5ed;
pub const XK_Arabic_fatha: x::Keysym = 0x5ee;
pub const XK_Arabic_damma: x::Keysym = 0x5ef;
pub const XK_Arabic_kasra: x::Keysym = 0x5f0;
pub const XK_Arabic_shadda: x::Keysym = 0x5f1;
pub const XK_Arabic_sukun: x::Keysym = 0x5f2;
pub const XK_Arabic_switch: x::Keysym = 0xFF7E;
pub const XK_Serbian_dje: x::Keysym = 0x6a1;
pub const XK_Macedonia_gje: x::Keysym = 0x6a2;
pub const XK_Cyrillic_io: x::Keysym = 0x6a3;
pub const XK_Ukrainian_ie: x::Keysym = 0x6a4;
pub const XK_Ukranian_je: x::Keysym = 0x6a4;
pub const XK_Macedonia_dse: x::Keysym = 0x6a5;
pub const XK_Ukrainian_i: x::Keysym = 0x6a6;
pub const XK_Ukranian_i: x::Keysym = 0x6a6;
pub const XK_Ukrainian_yi: x::Keysym = 0x6a7;
pub const XK_Ukranian_yi: x::Keysym = 0x6a7;
pub const XK_Cyrillic_je: x::Keysym = 0x6a8;
pub const XK_Serbian_je: x::Keysym = 0x6a8;
pub const XK_Cyrillic_lje: x::Keysym = 0x6a9;
pub const XK_Serbian_lje: x::Keysym = 0x6a9;
pub const XK_Cyrillic_nje: x::Keysym = 0x6aa;
pub const XK_Serbian_nje: x::Keysym = 0x6aa;
pub const XK_Serbian_tshe: x::Keysym = 0x6ab;
pub const XK_Macedonia_kje: x::Keysym = 0x6ac;
pub const XK_Byelorussian_shortu: x::Keysym = 0x6ae;
pub const XK_Cyrillic_dzhe: x::Keysym = 0x6af;
pub const XK_Serbian_dze: x::Keysym = 0x6af;
pub const XK_numerosign: x::Keysym = 0x6b0;
pub const XK_Serbian_DJE: x::Keysym = 0x6b1;
pub const XK_Macedonia_GJE: x::Keysym = 0x6b2;
pub const XK_Cyrillic_IO: x::Keysym = 0x6b3;
pub const XK_Ukrainian_IE: x::Keysym = 0x6b4;
pub const XK_Ukranian_JE: x::Keysym = 0x6b4;
pub const XK_Macedonia_DSE: x::Keysym = 0x6b5;
pub const XK_Ukrainian_I: x::Keysym = 0x6b6;
pub const XK_Ukranian_I: x::Keysym = 0x6b6;
pub const XK_Ukrainian_YI: x::Keysym = 0x6b7;
pub const XK_Ukranian_YI: x::Keysym = 0x6b7;
pub const XK_Cyrillic_JE: x::Keysym = 0x6b8;
pub const XK_Serbian_JE: x::Keysym = 0x6b8;
pub const XK_Cyrillic_LJE: x::Keysym = 0x6b9;
pub const XK_Serbian_LJE: x::Keysym = 0x6b9;
pub const XK_Cyrillic_NJE: x::Keysym = 0x6ba;
pub const XK_Serbian_NJE: x::Keysym = 0x6ba;
pub const XK_Serbian_TSHE: x::Keysym = 0x6bb;
pub const XK_Macedonia_KJE: x::Keysym = 0x6bc;
pub const XK_Byelorussian_SHORTU: x::Keysym = 0x6be;
pub const XK_Cyrillic_DZHE: x::Keysym = 0x6bf;
pub const XK_Serbian_DZE: x::Keysym = 0x6bf;
pub const XK_Cyrillic_yu: x::Keysym = 0x6c0;
pub const XK_Cyrillic_a: x::Keysym = 0x6c1;
pub const XK_Cyrillic_be: x::Keysym = 0x6c2;
pub const XK_Cyrillic_tse: x::Keysym = 0x6c3;
pub const XK_Cyrillic_de: x::Keysym = 0x6c4;
pub const XK_Cyrillic_ie: x::Keysym = 0x6c5;
pub const XK_Cyrillic_ef: x::Keysym = 0x6c6;
pub const XK_Cyrillic_ghe: x::Keysym = 0x6c7;
pub const XK_Cyrillic_ha: x::Keysym = 0x6c8;
pub const XK_Cyrillic_i: x::Keysym = 0x6c9;
pub const XK_Cyrillic_shorti: x::Keysym = 0x6ca;
pub const XK_Cyrillic_ka: x::Keysym = 0x6cb;
pub const XK_Cyrillic_el: x::Keysym = 0x6cc;
pub const XK_Cyrillic_em: x::Keysym = 0x6cd;
pub const XK_Cyrillic_en: x::Keysym = 0x6ce;
pub const XK_Cyrillic_o: x::Keysym = 0x6cf;
pub const XK_Cyrillic_pe: x::Keysym = 0x6d0;
pub const XK_Cyrillic_ya: x::Keysym = 0x6d1;
pub const XK_Cyrillic_er: x::Keysym = 0x6d2;
pub const XK_Cyrillic_es: x::Keysym = 0x6d3;
pub const XK_Cyrillic_te: x::Keysym = 0x6d4;
pub const XK_Cyrillic_u: x::Keysym = 0x6d5;
pub const XK_Cyrillic_zhe: x::Keysym = 0x6d6;
pub const XK_Cyrillic_ve: x::Keysym = 0x6d7;
pub const XK_Cyrillic_softsign: x::Keysym = 0x6d8;
pub const XK_Cyrillic_yeru: x::Keysym = 0x6d9;
pub const XK_Cyrillic_ze: x::Keysym = 0x6da;
pub const XK_Cyrillic_sha: x::Keysym = 0x6db;
pub const XK_Cyrillic_e: x::Keysym = 0x6dc;
pub const XK_Cyrillic_shcha: x::Keysym = 0x6dd;
pub const XK_Cyrillic_che: x::Keysym = 0x6de;
pub const XK_Cyrillic_hardsign: x::Keysym = 0x6df;
pub const XK_Cyrillic_YU: x::Keysym = 0x6e0;
pub const XK_Cyrillic_A: x::Keysym = 0x6e1;
pub const XK_Cyrillic_BE: x::Keysym = 0x6e2;
pub const XK_Cyrillic_TSE: x::Keysym = 0x6e3;
pub const XK_Cyrillic_DE: x::Keysym = 0x6e4;
pub const XK_Cyrillic_IE: x::Keysym = 0x6e5;
pub const XK_Cyrillic_EF: x::Keysym = 0x6e6;
pub const XK_Cyrillic_GHE: x::Keysym = 0x6e7;
pub const XK_Cyrillic_HA: x::Keysym = 0x6e8;
pub const XK_Cyrillic_I: x::Keysym = 0x6e9;
pub const XK_Cyrillic_SHORTI: x::Keysym = 0x6ea;
pub const XK_Cyrillic_KA: x::Keysym = 0x6eb;
pub const XK_Cyrillic_EL: x::Keysym = 0x6ec;
pub const XK_Cyrillic_EM: x::Keysym = 0x6ed;
pub const XK_Cyrillic_EN: x::Keysym = 0x6ee;
pub const XK_Cyrillic_O: x::Keysym = 0x6ef;
pub const XK_Cyrillic_PE: x::Keysym = 0x6f0;
pub const XK_Cyrillic_YA: x::Keysym = 0x6f1;
pub const XK_Cyrillic_ER: x::Keysym = 0x6f2;
pub const XK_Cyrillic_ES: x::Keysym = 0x6f3;
pub const XK_Cyrillic_TE: x::Keysym = 0x6f4;
pub const XK_Cyrillic_U: x::Keysym = 0x6f5;
pub const XK_Cyrillic_ZHE: x::Keysym = 0x6f6;
pub const XK_Cyrillic_VE: x::Keysym = 0x6f7;
pub const XK_Cyrillic_SOFTSIGN: x::Keysym = 0x6f8;
pub const XK_Cyrillic_YERU: x::Keysym = 0x6f9;
pub const XK_Cyrillic_ZE: x::Keysym = 0x6fa;
pub const XK_Cyrillic_SHA: x::Keysym = 0x6fb;
pub const XK_Cyrillic_E: x::Keysym = 0x6fc;
pub const XK_Cyrillic_SHCHA: x::Keysym = 0x6fd;
pub const XK_Cyrillic_CHE: x::Keysym = 0x6fe;
pub const XK_Cyrillic_HARDSIGN: x::Keysym = 0x6ff;
pub const XK_Greek_ALPHAaccent: x::Keysym = 0x7a1;
pub const XK_Greek_EPSILONaccent: x::Keysym = 0x7a2;
pub const XK_Greek_ETAaccent: x::Keysym = 0x7a3;
pub const XK_Greek_IOTAaccent: x::Keysym = 0x7a4;
pub const XK_Greek_IOTAdiaeresis: x::Keysym = 0x7a5;
pub const XK_Greek_OMICRONaccent: x::Keysym = 0x7a7;
pub const XK_Greek_UPSILONaccent: x::Keysym = 0x7a8;
pub const XK_Greek_UPSILONdieresis: x::Keysym = 0x7a9;
pub const XK_Greek_OMEGAaccent: x::Keysym = 0x7ab;
pub const XK_Greek_accentdieresis: x::Keysym = 0x7ae;
pub const XK_Greek_horizbar: x::Keysym = 0x7af;
pub const XK_Greek_alphaaccent: x::Keysym = 0x7b1;
pub const XK_Greek_epsilonaccent: x::Keysym = 0x7b2;
pub const XK_Greek_etaaccent: x::Keysym = 0x7b3;
pub const XK_Greek_iotaaccent: x::Keysym = 0x7b4;
pub const XK_Greek_iotadieresis: x::Keysym = 0x7b5;
pub const XK_Greek_iotaaccentdieresis: x::Keysym = 0x7b6;
pub const XK_Greek_omicronaccent: x::Keysym = 0x7b7;
pub const XK_Greek_upsilonaccent: x::Keysym = 0x7b8;
pub const XK_Greek_upsilondieresis: x::Keysym = 0x7b9;
pub const XK_Greek_upsilonaccentdieresis: x::Keysym = 0x7ba;
pub const XK_Greek_omegaaccent: x::Keysym = 0x7bb;
pub const XK_Greek_ALPHA: x::Keysym = 0x7c1;
pub const XK_Greek_BETA: x::Keysym = 0x7c2;
pub const XK_Greek_GAMMA: x::Keysym = 0x7c3;
pub const XK_Greek_DELTA: x::Keysym = 0x7c4;
pub const XK_Greek_EPSILON: x::Keysym = 0x7c5;
pub const XK_Greek_ZETA: x::Keysym = 0x7c6;
pub const XK_Greek_ETA: x::Keysym = 0x7c7;
pub const XK_Greek_THETA: x::Keysym = 0x7c8;
pub const XK_Greek_IOTA: x::Keysym = 0x7c9;
pub const XK_Greek_KAPPA: x::Keysym = 0x7ca;
pub const XK_Greek_LAMDA: x::Keysym = 0x7cb;
pub const XK_Greek_LAMBDA: x::Keysym = 0x7cb;
pub const XK_Greek_MU: x::Keysym = 0x7cc;
pub const XK_Greek_NU: x::Keysym = 0x7cd;
pub const XK_Greek_XI: x::Keysym = 0x7ce;
pub const XK_Greek_OMICRON: x::Keysym = 0x7cf;
pub const XK_Greek_PI: x::Keysym = 0x7d0;
pub const XK_Greek_RHO: x::Keysym = 0x7d1;
pub const XK_Greek_SIGMA: x::Keysym = 0x7d2;
pub const XK_Greek_TAU: x::Keysym = 0x7d4;
pub const XK_Greek_UPSILON: x::Keysym = 0x7d5;
pub const XK_Greek_PHI: x::Keysym = 0x7d6;
pub const XK_Greek_CHI: x::Keysym = 0x7d7;
pub const XK_Greek_PSI: x::Keysym = 0x7d8;
pub const XK_Greek_OMEGA: x::Keysym = 0x7d9;
pub const XK_Greek_alpha: x::Keysym = 0x7e1;
pub const XK_Greek_beta: x::Keysym = 0x7e2;
pub const XK_Greek_gamma: x::Keysym = 0x7e3;
pub const XK_Greek_delta: x::Keysym = 0x7e4;
pub const XK_Greek_epsilon: x::Keysym = 0x7e5;
pub const XK_Greek_zeta: x::Keysym = 0x7e6;
pub const XK_Greek_eta: x::Keysym = 0x7e7;
pub const XK_Greek_theta: x::Keysym = 0x7e8;
pub const XK_Greek_iota: x::Keysym = 0x7e9;
pub const XK_Greek_kappa: x::Keysym = 0x7ea;
pub const XK_Greek_lamda: x::Keysym = 0x7eb;
pub const XK_Greek_lambda: x::Keysym = 0x7eb;
pub const XK_Greek_mu: x::Keysym = 0x7ec;
pub const XK_Greek_nu: x::Keysym = 0x7ed;
pub const XK_Greek_xi: x::Keysym = 0x7ee;
pub const XK_Greek_omicron: x::Keysym = 0x7ef;
pub const XK_Greek_pi: x::Keysym = 0x7f0;
pub const XK_Greek_rho: x::Keysym = 0x7f1;
pub const XK_Greek_sigma: x::Keysym = 0x7f2;
pub const XK_Greek_finalsmallsigma: x::Keysym = 0x7f3;
pub const XK_Greek_tau: x::Keysym = 0x7f4;
pub const XK_Greek_upsilon: x::Keysym = 0x7f5;
pub const XK_Greek_phi: x::Keysym = 0x7f6;
pub const XK_Greek_chi: x::Keysym = 0x7f7;
pub const XK_Greek_psi: x::Keysym = 0x7f8;
pub const XK_Greek_omega: x::Keysym = 0x7f9;
pub const XK_Greek_switch: x::Keysym = 0xFF7E;
pub const XK_leftradical: x::Keysym = 0x8a1;
pub const XK_topleftradical: x::Keysym = 0x8a2;
pub const XK_horizconnector: x::Keysym = 0x8a3;
pub const XK_topintegral: x::Keysym = 0x8a4;
pub const XK_botintegral: x::Keysym = 0x8a5;
pub const XK_vertconnector: x::Keysym = 0x8a6;
pub const XK_topleftsqbracket: x::Keysym = 0x8a7;
pub const XK_botleftsqbracket: x::Keysym = 0x8a8;
pub const XK_toprightsqbracket: x::Keysym = 0x8a9;
pub const XK_botrightsqbracket: x::Keysym = 0x8aa;
pub const XK_topleftparens: x::Keysym = 0x8ab;
pub const XK_botleftparens: x::Keysym = 0x8ac;
pub const XK_toprightparens: x::Keysym = 0x8ad;
pub const XK_botrightparens: x::Keysym = 0x8ae;
pub const XK_leftmiddlecurlybrace: x::Keysym = 0x8af;
pub const XK_rightmiddlecurlybrace: x::Keysym = 0x8b0;
pub const XK_topleftsummation: x::Keysym = 0x8b1;
pub const XK_botleftsummation: x::Keysym = 0x8b2;
pub const XK_topvertsummationconnector: x::Keysym = 0x8b3;
pub const XK_botvertsummationconnector: x::Keysym = 0x8b4;
pub const XK_toprightsummation: x::Keysym = 0x8b5;
pub const XK_botrightsummation: x::Keysym = 0x8b6;
pub const XK_rightmiddlesummation: x::Keysym = 0x8b7;
pub const XK_lessthanequal: x::Keysym = 0x8bc;
pub const XK_notequal: x::Keysym = 0x8bd;
pub const XK_greaterthanequal: x::Keysym = 0x8be;
pub const XK_integral: x::Keysym = 0x8bf;
pub const XK_therefore: x::Keysym = 0x8c0;
pub const XK_variation: x::Keysym = 0x8c1;
pub const XK_infinity: x::Keysym = 0x8c2;
pub const XK_nabla: x::Keysym = 0x8c5;
pub const XK_approximate: x::Keysym = 0x8c8;
pub const XK_similarequal: x::Keysym = 0x8c9;
pub const XK_ifonlyif: x::Keysym = 0x8cd;
pub const XK_implies: x::Keysym = 0x8ce;
pub const XK_identical: x::Keysym = 0x8cf;
pub const XK_radical: x::Keysym = 0x8d6;
pub const XK_includedin: x::Keysym = 0x8da;
pub const XK_includes: x::Keysym = 0x8db;
pub const XK_intersection: x::Keysym = 0x8dc;
pub const XK_union: x::Keysym = 0x8dd;
pub const XK_logicaland: x::Keysym = 0x8de;
pub const XK_logicalor: x::Keysym = 0x8df;
pub const XK_partialderivative: x::Keysym = 0x8ef;
pub const XK_function: x::Keysym = 0x8f6;
pub const XK_leftarrow: x::Keysym = 0x8fb;
pub const XK_uparrow: x::Keysym = 0x8fc;
pub const XK_rightarrow: x::Keysym = 0x8fd;
pub const XK_downarrow: x::Keysym = 0x8fe;
pub const XK_blank: x::Keysym = 0x9df;
pub const XK_soliddiamond: x::Keysym = 0x9e0;
pub const XK_checkerboard: x::Keysym = 0x9e1;
pub const XK_ht: x::Keysym = 0x9e2;
pub const XK_ff: x::Keysym = 0x9e3;
pub const XK_cr: x::Keysym = 0x9e4;
pub const XK_lf: x::Keysym = 0x9e5;
pub const XK_nl: x::Keysym = 0x9e8;
pub const XK_vt: x::Keysym = 0x9e9;
pub const XK_lowrightcorner: x::Keysym = 0x9ea;
pub const XK_uprightcorner: x::Keysym = 0x9eb;
pub const XK_upleftcorner: x::Keysym = 0x9ec;
pub const XK_lowleftcorner: x::Keysym = 0x9ed;
pub const XK_crossinglines: x::Keysym = 0x9ee;
pub const XK_horizlinescan1: x::Keysym = 0x9ef;
pub const XK_horizlinescan3: x::Keysym = 0x9f0;
pub const XK_horizlinescan5: x::Keysym = 0x9f1;
pub const XK_horizlinescan7: x::Keysym = 0x9f2;
pub const XK_horizlinescan9: x::Keysym = 0x9f3;
pub const XK_leftt: x::Keysym = 0x9f4;
pub const XK_rightt: x::Keysym = 0x9f5;
pub const XK_bott: x::Keysym = 0x9f6;
pub const XK_topt: x::Keysym = 0x9f7;
pub const XK_vertbar: x::Keysym = 0x9f8;
pub const XK_emspace: x::Keysym = 0xaa1;
pub const XK_enspace: x::Keysym = 0xaa2;
pub const XK_em3space: x::Keysym = 0xaa3;
pub const XK_em4space: x::Keysym = 0xaa4;
pub const XK_digitspace: x::Keysym = 0xaa5;
pub const XK_punctspace: x::Keysym = 0xaa6;
pub const XK_thinspace: x::Keysym = 0xaa7;
pub const XK_hairspace: x::Keysym = 0xaa8;
pub const XK_emdash: x::Keysym = 0xaa9;
pub const XK_endash: x::Keysym = 0xaaa;
pub const XK_signifblank: x::Keysym = 0xaac;
pub const XK_ellipsis: x::Keysym = 0xaae;
pub const XK_doubbaselinedot: x::Keysym = 0xaaf;
pub const XK_onethird: x::Keysym = 0xab0;
pub const XK_twothirds: x::Keysym = 0xab1;
pub const XK_onefifth: x::Keysym = 0xab2;
pub const XK_twofifths: x::Keysym = 0xab3;
pub const XK_threefifths: x::Keysym = 0xab4;
pub const XK_fourfifths: x::Keysym = 0xab5;
pub const XK_onesixth: x::Keysym = 0xab6;
pub const XK_fivesixths: x::Keysym = 0xab7;
pub const XK_careof: x::Keysym = 0xab8;
pub const XK_figdash: x::Keysym = 0xabb;
pub const XK_leftanglebracket: x::Keysym = 0xabc;
pub const XK_decimalpoint: x::Keysym = 0xabd;
pub const XK_rightanglebracket: x::Keysym = 0xabe;
pub const XK_marker: x::Keysym = 0xabf;
pub const XK_oneeighth: x::Keysym = 0xac3;
pub const XK_threeeighths: x::Keysym = 0xac4;
pub const XK_fiveeighths: x::Keysym = 0xac5;
pub const XK_seveneighths: x::Keysym = 0xac6;
pub const XK_trademark: x::Keysym = 0xac9;
pub const XK_signaturemark: x::Keysym = 0xaca;
pub const XK_trademarkincircle: x::Keysym = 0xacb;
pub const XK_leftopentriangle: x::Keysym = 0xacc;
pub const XK_rightopentriangle: x::Keysym = 0xacd;
pub const XK_emopencircle: x::Keysym = 0xace;
pub const XK_emopenrectangle: x::Keysym = 0xacf;
pub const XK_leftsinglequotemark: x::Keysym = 0xad0;
pub const XK_rightsinglequotemark: x::Keysym = 0xad1;
pub const XK_leftdoublequotemark: x::Keysym = 0xad2;
pub const XK_rightdoublequotemark: x::Keysym = 0xad3;
pub const XK_prescription: x::Keysym = 0xad4;
pub const XK_minutes: x::Keysym = 0xad6;
pub const XK_seconds: x::Keysym = 0xad7;
pub const XK_latincross: x::Keysym = 0xad9;
pub const XK_hexagram: x::Keysym = 0xada;
pub const XK_filledrectbullet: x::Keysym = 0xadb;
pub const XK_filledlefttribullet: x::Keysym = 0xadc;
pub const XK_filledrighttribullet: x::Keysym = 0xadd;
pub const XK_emfilledcircle: x::Keysym = 0xade;
pub const XK_emfilledrect: x::Keysym = 0xadf;
pub const XK_enopencircbullet: x::Keysym = 0xae0;
pub const XK_enopensquarebullet: x::Keysym = 0xae1;
pub const XK_openrectbullet: x::Keysym = 0xae2;
pub const XK_opentribulletup: x::Keysym = 0xae3;
pub const XK_opentribulletdown: x::Keysym = 0xae4;
pub const XK_openstar: x::Keysym = 0xae5;
pub const XK_enfilledcircbullet: x::Keysym = 0xae6;
pub const XK_enfilledsqbullet: x::Keysym = 0xae7;
pub const XK_filledtribulletup: x::Keysym = 0xae8;
pub const XK_filledtribulletdown: x::Keysym = 0xae9;
pub const XK_leftpointer: x::Keysym = 0xaea;
pub const XK_rightpointer: x::Keysym = 0xaeb;
pub const XK_club: x::Keysym = 0xaec;
pub const XK_diamond: x::Keysym = 0xaed;
pub const XK_heart: x::Keysym = 0xaee;
pub const XK_maltesecross: x::Keysym = 0xaf0;
pub const XK_dagger: x::Keysym = 0xaf1;
pub const XK_doubledagger: x::Keysym = 0xaf2;
pub const XK_checkmark: x::Keysym = 0xaf3;
pub const XK_ballotcross: x::Keysym = 0xaf4;
pub const XK_musicalsharp: x::Keysym = 0xaf5;
pub const XK_musicalflat: x::Keysym = 0xaf6;
pub const XK_malesymbol: x::Keysym = 0xaf7;
pub const XK_femalesymbol: x::Keysym = 0xaf8;
pub const XK_telephone: x::Keysym = 0xaf9;
pub const XK_telephonerecorder: x::Keysym = 0xafa;
pub const XK_phonographcopyright: x::Keysym = 0xafb;
pub const XK_caret: x::Keysym = 0xafc;
pub const XK_singlelowquotemark: x::Keysym = 0xafd;
pub const XK_doublelowquotemark: x::Keysym = 0xafe;
pub const XK_cursor: x::Keysym = 0xaff;
pub const XK_leftcaret: x::Keysym = 0xba3;
pub const XK_rightcaret: x::Keysym = 0xba6;
pub const XK_downcaret: x::Keysym = 0xba8;
pub const XK_upcaret: x::Keysym = 0xba9;
pub const XK_overbar: x::Keysym = 0xbc0;
pub const XK_downtack: x::Keysym = 0xbc2;
pub const XK_upshoe: x::Keysym = 0xbc3;
pub const XK_downstile: x::Keysym = 0xbc4;
pub const XK_underbar: x::Keysym = 0xbc6;
pub const XK_jot: x::Keysym = 0xbca;
pub const XK_quad: x::Keysym = 0xbcc;
pub const XK_uptack: x::Keysym = 0xbce;
pub const XK_circle: x::Keysym = 0xbcf;
pub const XK_upstile: x::Keysym = 0xbd3;
pub const XK_downshoe: x::Keysym = 0xbd6;
pub const XK_rightshoe: x::Keysym = 0xbd8;
pub const XK_leftshoe: x::Keysym = 0xbda;
pub const XK_lefttack: x::Keysym = 0xbdc;
pub const XK_righttack: x::Keysym = 0xbfc;
pub const XK_hebrew_doublelowline: x::Keysym = 0xcdf;
pub const XK_hebrew_aleph: x::Keysym = 0xce0;
pub const XK_hebrew_bet: x::Keysym = 0xce1;
pub const XK_hebrew_beth: x::Keysym = 0xce1;
pub const XK_hebrew_gimel: x::Keysym = 0xce2;
pub const XK_hebrew_gimmel: x::Keysym = 0xce2;
pub const XK_hebrew_dalet: x::Keysym = 0xce3;
pub const XK_hebrew_daleth: x::Keysym = 0xce3;
pub const XK_hebrew_he: x::Keysym = 0xce4;
pub const XK_hebrew_waw: x::Keysym = 0xce5;
pub const XK_hebrew_zain: x::Keysym = 0xce6;
pub const XK_hebrew_zayin: x::Keysym = 0xce6;
pub const XK_hebrew_chet: x::Keysym = 0xce7;
pub const XK_hebrew_het: x::Keysym = 0xce7;
pub const XK_hebrew_tet: x::Keysym = 0xce8;
pub const XK_hebrew_teth: x::Keysym = 0xce8;
pub const XK_hebrew_yod: x::Keysym = 0xce9;
pub const XK_hebrew_finalkaph: x::Keysym = 0xcea;
pub const XK_hebrew_kaph: x::Keysym = 0xceb;
pub const XK_hebrew_lamed: x::Keysym = 0xcec;
pub const XK_hebrew_finalmem: x::Keysym = 0xced;
pub const XK_hebrew_mem: x::Keysym = 0xcee;
pub const XK_hebrew_finalnun: x::Keysym = 0xcef;
pub const XK_hebrew_nun: x::Keysym = 0xcf0;
pub const XK_hebrew_samech: x::Keysym = 0xcf1;
pub const XK_hebrew_samekh: x::Keysym = 0xcf1;
pub const XK_hebrew_ayin: x::Keysym = 0xcf2;
pub const XK_hebrew_finalpe: x::Keysym = 0xcf3;
pub const XK_hebrew_pe: x::Keysym = 0xcf4;
pub const XK_hebrew_finalzade: x::Keysym = 0xcf5;
pub const XK_hebrew_finalzadi: x::Keysym = 0xcf5;
pub const XK_hebrew_zade: x::Keysym = 0xcf6;
pub const XK_hebrew_zadi: x::Keysym = 0xcf6;
pub const XK_hebrew_qoph: x::Keysym = 0xcf7;
pub const XK_hebrew_kuf: x::Keysym = 0xcf7;
pub const XK_hebrew_resh: x::Keysym = 0xcf8;
pub const XK_hebrew_shin: x::Keysym = 0xcf9;
pub const XK_hebrew_taw: x::Keysym = 0xcfa;
pub const XK_hebrew_taf: x::Keysym = 0xcfa;
pub const XK_Hebrew_switch: x::Keysym = 0xFF7E;

pub const XF86XK_ModeLock: x::Keysym = 0x1008FF01;
pub const XF86XK_MonBrightnessUp: x::Keysym = 0x1008FF02;
pub const XF86XK_MonBrightnessDown: x::Keysym = 0x1008FF03;
pub const XF86XK_KbdLightOnOff: x::Keysym = 0x1008FF04;
pub const XF86XK_KbdBrightnessUp: x::Keysym = 0x1008FF05;
pub const XF86XK_KbdBrightnessDown: x::Keysym = 0x1008FF06;
pub const XF86XK_Standby: x::Keysym = 0x1008FF10;
pub const XF86XK_AudioLowerVolume: x::Keysym = 0x1008FF11;
pub const XF86XK_AudioMute: x::Keysym = 0x1008FF12;
pub const XF86XK_AudioRaiseVolume: x::Keysym = 0x1008FF13;
pub const XF86XK_AudioPlay: x::Keysym = 0x1008FF14;
pub const XF86XK_AudioStop: x::Keysym = 0x1008FF15;
pub const XF86XK_AudioPrev: x::Keysym = 0x1008FF16;
pub const XF86XK_AudioNext: x::Keysym = 0x1008FF17;
pub const XF86XK_HomePage: x::Keysym = 0x1008FF18;
pub const XF86XK_Mail: x::Keysym = 0x1008FF19;
pub const XF86XK_Start: x::Keysym = 0x1008FF1A;
pub const XF86XK_Search: x::Keysym = 0x1008FF1B;
pub const XF86XK_AudioRecord: x::Keysym = 0x1008FF1C;
pub const XF86XK_Calculator: x::Keysym = 0x1008FF1D;
pub const XF86XK_Memo: x::Keysym = 0x1008FF1E;
pub const XF86XK_ToDoList: x::Keysym = 0x1008FF1F;
pub const XF86XK_Calendar: x::Keysym = 0x1008FF20;
pub const XF86XK_PowerDown: x::Keysym = 0x1008FF21;
pub const XF86XK_ContrastAdjust: x::Keysym = 0x1008FF22;
pub const XF86XK_RockerUp: x::Keysym = 0x1008FF23;
pub const XF86XK_RockerDown: x::Keysym = 0x1008FF24;
pub const XF86XK_RockerEnter: x::Keysym = 0x1008FF25;
pub const XF86XK_Back: x::Keysym = 0x1008FF26;
pub const XF86XK_Forward: x::Keysym = 0x1008FF27;
pub const XF86XK_Stop: x::Keysym = 0x1008FF28;
pub const XF86XK_Refresh: x::Keysym = 0x1008FF29;
pub const XF86XK_PowerOff: x::Keysym = 0x1008FF2A;
pub const XF86XK_WakeUp: x::Keysym = 0x1008FF2B;
pub const XF86XK_Eject: x::Keysym = 0x1008FF2C;
pub const XF86XK_ScreenSaver: x::Keysym = 0x1008FF2D;
pub const XF86XK_WWW: x::Keysym = 0x1008FF2E;
pub const XF86XK_Sleep: x::Keysym = 0x1008FF2F;
pub const XF86XK_Favorites: x::Keysym = 0x1008FF30;
pub const XF86XK_AudioPause: x::Keysym = 0x1008FF31;
pub const XF86XK_AudioMedia: x::Keysym = 0x1008FF32;
pub const XF86XK_MyComputer: x::Keysym = 0x1008FF33;
pub const XF86XK_VendorHome: x::Keysym = 0x1008FF34;
pub const XF86XK_LightBulb: x::Keysym = 0x1008FF35;
pub const XF86XK_Shop: x::Keysym = 0x1008FF36;
pub const XF86XK_History: x::Keysym = 0x1008FF37;
pub const XF86XK_OpenURL: x::Keysym = 0x1008FF38;
pub const XF86XK_AddFavorite: x::Keysym = 0x1008FF39;
pub const XF86XK_HotLinks: x::Keysym = 0x1008FF3A;
pub const XF86XK_BrightnessAdjust: x::Keysym = 0x1008FF3B;
pub const XF86XK_Finance: x::Keysym = 0x1008FF3C;
pub const XF86XK_Community: x::Keysym = 0x1008FF3D;
pub const XF86XK_AudioRewind: x::Keysym = 0x1008FF3E;
pub const XF86XK_BackForward: x::Keysym = 0x1008FF3F;
pub const XF86XK_Launch0: x::Keysym = 0x1008FF40;
pub const XF86XK_Launch1: x::Keysym = 0x1008FF41;
pub const XF86XK_Launch2: x::Keysym = 0x1008FF42;
pub const XF86XK_Launch3: x::Keysym = 0x1008FF43;
pub const XF86XK_Launch4: x::Keysym = 0x1008FF44;
pub const XF86XK_Launch5: x::Keysym = 0x1008FF45;
pub const XF86XK_Launch6: x::Keysym = 0x1008FF46;
pub const XF86XK_Launch7: x::Keysym = 0x1008FF47;
pub const XF86XK_Launch8: x::Keysym = 0x1008FF48;
pub const XF86XK_Launch9: x::Keysym = 0x1008FF49;
pub const XF86XK_LaunchA: x::Keysym = 0x1008FF4A;
pub const XF86XK_LaunchB: x::Keysym = 0x1008FF4B;
pub const XF86XK_LaunchC: x::Keysym = 0x1008FF4C;
pub const XF86XK_LaunchD: x::Keysym = 0x1008FF4D;
pub const XF86XK_LaunchE: x::Keysym = 0x1008FF4E;
pub const XF86XK_LaunchF: x::Keysym = 0x1008FF4F;
pub const XF86XK_ApplicationLeft: x::Keysym = 0x1008FF50;
pub const XF86XK_ApplicationRight: x::Keysym = 0x1008FF51;
pub const XF86XK_Book: x::Keysym = 0x1008FF52;
pub const XF86XK_CD: x::Keysym = 0x1008FF53;
pub const XF86XK_Calculater: x::Keysym = 0x1008FF54;
pub const XF86XK_Clear: x::Keysym = 0x1008FF55;
pub const XF86XK_Close: x::Keysym = 0x1008FF56;
pub const XF86XK_Copy: x::Keysym = 0x1008FF57;
pub const XF86XK_Cut: x::Keysym = 0x1008FF58;
pub const XF86XK_Display: x::Keysym = 0x1008FF59;
pub const XF86XK_DOS: x::Keysym = 0x1008FF5A;
pub const XF86XK_Documents: x::Keysym = 0x1008FF5B;
pub const XF86XK_Excel: x::Keysym = 0x1008FF5C;
pub const XF86XK_Explorer: x::Keysym = 0x1008FF5D;
pub const XF86XK_Game: x::Keysym = 0x1008FF5E;
pub const XF86XK_Go: x::Keysym = 0x1008FF5F;
pub const XF86XK_iTouch: x::Keysym = 0x1008FF60;
pub const XF86XK_LogOff: x::Keysym = 0x1008FF61;
pub const XF86XK_Market: x::Keysym = 0x1008FF62;
pub const XF86XK_Meeting: x::Keysym = 0x1008FF63;
pub const XF86XK_MenuKB: x::Keysym = 0x1008FF65;
pub const XF86XK_MenuPB: x::Keysym = 0x1008FF66;
pub const XF86XK_MySites: x::Keysym = 0x1008FF67;
pub const XF86XK_New: x::Keysym = 0x1008FF68;
pub const XF86XK_News: x::Keysym = 0x1008FF69;
pub const XF86XK_OfficeHome: x::Keysym = 0x1008FF6A;
pub const XF86XK_Open: x::Keysym = 0x1008FF6B;
pub const XF86XK_Option: x::Keysym = 0x1008FF6C;
pub const XF86XK_Paste: x::Keysym = 0x1008FF6D;
pub const XF86XK_Phone: x::Keysym = 0x1008FF6E;
pub const XF86XK_Q: x::Keysym = 0x1008FF70;
pub const XF86XK_Reply: x::Keysym = 0x1008FF72;
pub const XF86XK_Reload: x::Keysym = 0x1008FF73;
pub const XF86XK_RotateWindows: x::Keysym = 0x1008FF74;
pub const XF86XK_RotationPB: x::Keysym = 0x1008FF75;
pub const XF86XK_RotationKB: x::Keysym = 0x1008FF76;
pub const XF86XK_Save: x::Keysym = 0x1008FF77;
pub const XF86XK_ScrollUp: x::Keysym = 0x1008FF78;
pub const XF86XK_ScrollDown: x::Keysym = 0x1008FF79;
pub const XF86XK_ScrollClick: x::Keysym = 0x1008FF7A;
pub const XF86XK_Send: x::Keysym = 0x1008FF7B;
pub const XF86XK_Spell: x::Keysym = 0x1008FF7C;
pub const XF86XK_SplitScreen: x::Keysym = 0x1008FF7D;
pub const XF86XK_Support: x::Keysym = 0x1008FF7E;
pub const XF86XK_TaskPane: x::Keysym = 0x1008FF7F;
pub const XF86XK_Terminal: x::Keysym = 0x1008FF80;
pub const XF86XK_Tools: x::Keysym = 0x1008FF81;
pub const XF86XK_Travel: x::Keysym = 0x1008FF82;
pub const XF86XK_UserPB: x::Keysym = 0x1008FF84;
pub const XF86XK_User1KB: x::Keysym = 0x1008FF85;
pub const XF86XK_User2KB: x::Keysym = 0x1008FF86;
pub const XF86XK_Video: x::Keysym = 0x1008FF87;
pub const XF86XK_WheelButton: x::Keysym = 0x1008FF88;
pub const XF86XK_Word: x::Keysym = 0x1008FF89;
pub const XF86XK_Xfer: x::Keysym = 0x1008FF8A;
pub const XF86XK_ZoomIn: x::Keysym = 0x1008FF8B;
pub const XF86XK_ZoomOut: x::Keysym = 0x1008FF8C;
pub const XF86XK_Away: x::Keysym = 0x1008FF8D;
pub const XF86XK_Messenger: x::Keysym = 0x1008FF8E;
pub const XF86XK_WebCam: x::Keysym = 0x1008FF8F;
pub const XF86XK_MailForward: x::Keysym = 0x1008FF90;
pub const XF86XK_Pictures: x::Keysym = 0x1008FF91;
pub const XF86XK_Music: x::Keysym = 0x1008FF92;
pub const XF86XK_Battery: x::Keysym = 0x1008FF93;
pub const XF86XK_Bluetooth: x::Keysym = 0x1008FF94;
pub const XF86XK_WLAN: x::Keysym = 0x1008FF95;
pub const XF86XK_UWB: x::Keysym = 0x1008FF96;
pub const XF86XK_AudioForward: x::Keysym = 0x1008FF97;
pub const XF86XK_AudioRepeat: x::Keysym = 0x1008FF98;
pub const XF86XK_AudioRandomPlay: x::Keysym = 0x1008FF99;
pub const XF86XK_Subtitle: x::Keysym = 0x1008FF9A;
pub const XF86XK_AudioCycleTrack: x::Keysym = 0x1008FF9B;
pub const XF86XK_CycleAngle: x::Keysym = 0x1008FF9C;
pub const XF86XK_FrameBack: x::Keysym = 0x1008FF9D;
pub const XF86XK_FrameForward: x::Keysym = 0x1008FF9E;
pub const XF86XK_Time: x::Keysym = 0x1008FF9F;
pub const XF86XK_Select: x::Keysym = 0x1008FFA0;
pub const XF86XK_View: x::Keysym = 0x1008FFA1;
pub const XF86XK_TopMenu: x::Keysym = 0x1008FFA2;
pub const XF86XK_Red: x::Keysym = 0x1008FFA3;
pub const XF86XK_Green: x::Keysym = 0x1008FFA4;
pub const XF86XK_Yellow: x::Keysym = 0x1008FFA5;
pub const XF86XK_Blue: x::Keysym = 0x1008FFA6;
pub const XF86XK_Suspend: x::Keysym = 0x1008FFA7;
pub const XF86XK_Hibernate: x::Keysym = 0x1008FFA8;
pub const XF86XK_TouchpadToggle: x::Keysym = 0x1008FFA9;
pub const XF86XK_TouchpadOn: x::Keysym = 0x1008FFB0;
pub const XF86XK_TouchpadOff: x::Keysym = 0x1008FFB1;
pub const XF86XK_AudioMicMute: x::Keysym = 0x1008FFB2;
pub const XF86XK_Switch_VT_1: x::Keysym = 0x1008FE01;
pub const XF86XK_Switch_VT_2: x::Keysym = 0x1008FE02;
pub const XF86XK_Switch_VT_3: x::Keysym = 0x1008FE03;
pub const XF86XK_Switch_VT_4: x::Keysym = 0x1008FE04;
pub const XF86XK_Switch_VT_5: x::Keysym = 0x1008FE05;
pub const XF86XK_Switch_VT_6: x::Keysym = 0x1008FE06;
pub const XF86XK_Switch_VT_7: x::Keysym = 0x1008FE07;
pub const XF86XK_Switch_VT_8: x::Keysym = 0x1008FE08;
pub const XF86XK_Switch_VT_9: x::Keysym = 0x1008FE09;
pub const XF86XK_Switch_VT_10: x::Keysym = 0x1008FE0A;
pub const XF86XK_Switch_VT_11: x::Keysym = 0x1008FE0B;
pub const XF86XK_Switch_VT_12: x::Keysym = 0x1008FE0C;
pub const XF86XK_Ungrab: x::Keysym = 0x1008FE20;
pub const XF86XK_ClearGrab: x::Keysym = 0x1008FE21;
pub const XF86XK_Next_VMode: x::Keysym = 0x1008FE22;
pub const XF86XK_Prev_VMode: x::Keysym = 0x1008FE23;
pub const XF86XK_LogWindowTree: x::Keysym = 0x1008FE24;
pub const XF86XK_LogGrabInfo: x::Keysym = 0x1008FE25;

pub const XK_ISO_Lock: x::Keysym = 0xfe01;
pub const XK_ISO_Level2_Latch: x::Keysym = 0xfe02;
pub const XK_ISO_Level3_Shift: x::Keysym = 0xfe03;
pub const XK_ISO_Level3_Latch: x::Keysym = 0xfe04;
pub const XK_ISO_Level3_Lock: x::Keysym = 0xfe05;
pub const XK_ISO_Level5_Shift: x::Keysym = 0xfe11;
pub const XK_ISO_Level5_Latch: x::Keysym = 0xfe12;
pub const XK_ISO_Level5_Lock: x::Keysym = 0xfe13;
pub const XK_ISO_Group_Shift: x::Keysym = 0xff7e;
pub const XK_ISO_Group_Latch: x::Keysym = 0xfe06;
pub const XK_ISO_Group_Lock: x::Keysym = 0xfe07;
pub const XK_ISO_Next_Group: x::Keysym = 0xfe08;
pub const XK_ISO_Next_Group_Lock: x::Keysym = 0xfe09;
pub const XK_ISO_Prev_Group: x::Keysym = 0xfe0a;
pub const XK_ISO_Prev_Group_Lock: x::Keysym = 0xfe0b;
pub const XK_ISO_First_Group: x::Keysym = 0xfe0c;
pub const XK_ISO_First_Group_Lock: x::Keysym = 0xfe0d;
pub const XK_ISO_Last_Group: x::Keysym = 0xfe0e;
pub const XK_ISO_Last_Group_Lock: x::Keysym = 0xfe0f;

pub const XK_ISO_Left_Tab: x::Keysym = 0xfe20;
pub const XK_ISO_Move_Line_Up: x::Keysym = 0xfe21;
pub const XK_ISO_Move_Line_Down: x::Keysym = 0xfe22;
pub const XK_ISO_Partial_Line_Up: x::Keysym = 0xfe23;
pub const XK_ISO_Partial_Line_Down: x::Keysym = 0xfe24;
pub const XK_ISO_Partial_Space_Left: x::Keysym = 0xfe25;
pub const XK_ISO_Partial_Space_Right: x::Keysym = 0xfe26;
pub const XK_ISO_Set_Margin_Left: x::Keysym = 0xfe27;
pub const XK_ISO_Set_Margin_Right: x::Keysym = 0xfe28;
pub const XK_ISO_Release_Margin_Left: x::Keysym = 0xfe29;
pub const XK_ISO_Release_Margin_Right: x::Keysym = 0xfe2a;
pub const XK_ISO_Release_Both_Margins: x::Keysym = 0xfe2b;
pub const XK_ISO_Fast_Cursor_Left: x::Keysym = 0xfe2c;
pub const XK_ISO_Fast_Cursor_Right: x::Keysym = 0xfe2d;
pub const XK_ISO_Fast_Cursor_Up: x::Keysym = 0xfe2e;
pub const XK_ISO_Fast_Cursor_Down: x::Keysym = 0xfe2f;
pub const XK_ISO_Continuous_Underline: x::Keysym = 0xfe30;
pub const XK_ISO_Discontinuous_Underline: x::Keysym = 0xfe31;
pub const XK_ISO_Emphasize: x::Keysym = 0xfe32;
pub const XK_ISO_Center_Object: x::Keysym = 0xfe33;
pub const XK_ISO_Enter: x::Keysym = 0xfe34;

pub const XK_dead_grave: x::Keysym = 0xfe50;
pub const XK_dead_acute: x::Keysym = 0xfe51;
pub const XK_dead_circumflex: x::Keysym = 0xfe52;
pub const XK_dead_tilde: x::Keysym = 0xfe53;
pub const XK_dead_perispomeni: x::Keysym = 0xfe53;
pub const XK_dead_macron: x::Keysym = 0xfe54;
pub const XK_dead_breve: x::Keysym = 0xfe55;
pub const XK_dead_abovedot: x::Keysym = 0xfe56;
pub const XK_dead_diaeresis: x::Keysym = 0xfe57;
pub const XK_dead_abovering: x::Keysym = 0xfe58;
pub const XK_dead_doubleacute: x::Keysym = 0xfe59;
pub const XK_dead_caron: x::Keysym = 0xfe5a;
pub const XK_dead_cedilla: x::Keysym = 0xfe5b;
pub const XK_dead_ogonek: x::Keysym = 0xfe5c;
pub const XK_dead_iota: x::Keysym = 0xfe5d;
pub const XK_dead_voiced_sound: x::Keysym = 0xfe5e;
pub const XK_dead_semivoiced_sound: x::Keysym = 0xfe5f;
pub const XK_dead_belowdot: x::Keysym = 0xfe60;
pub const XK_dead_hook: x::Keysym = 0xfe61;
pub const XK_dead_horn: x::Keysym = 0xfe62;
pub const XK_dead_stroke: x::Keysym = 0xfe63;
pub const XK_dead_abovecomma: x::Keysym = 0xfe64;
pub const XK_dead_psili: x::Keysym = 0xfe64;
pub const XK_dead_abovereversedcomma: x::Keysym = 0xfe65;
pub const XK_dead_dasia: x::Keysym = 0xfe65;
pub const XK_dead_doublegrave: x::Keysym = 0xfe66;
pub const XK_dead_belowring: x::Keysym = 0xfe67;
pub const XK_dead_belowmacron: x::Keysym = 0xfe68;
pub const XK_dead_belowcircumflex: x::Keysym = 0xfe69;
pub const XK_dead_belowtilde: x::Keysym = 0xfe6a;
pub const XK_dead_belowbreve: x::Keysym = 0xfe6b;
pub const XK_dead_belowdiaeresis: x::Keysym = 0xfe6c;
pub const XK_dead_invertedbreve: x::Keysym = 0xfe6d;
pub const XK_dead_belowcomma: x::Keysym = 0xfe6e;
pub const XK_dead_currency: x::Keysym = 0xfe6f;

pub const XK_dead_lowline: x::Keysym = 0xfe90;
pub const XK_dead_aboveverticalline: x::Keysym = 0xfe91;
pub const XK_dead_belowverticalline: x::Keysym = 0xfe92;
pub const XK_dead_longsolidusoverlay: x::Keysym = 0xfe93;

pub const XK_dead_a: x::Keysym = 0xfe80;
pub const XK_dead_A: x::Keysym = 0xfe81;
pub const XK_dead_e: x::Keysym = 0xfe82;
pub const XK_dead_E: x::Keysym = 0xfe83;
pub const XK_dead_i: x::Keysym = 0xfe84;
pub const XK_dead_I: x::Keysym = 0xfe85;
pub const XK_dead_o: x::Keysym = 0xfe86;
pub const XK_dead_O: x::Keysym = 0xfe87;
pub const XK_dead_u: x::Keysym = 0xfe88;
pub const XK_dead_U: x::Keysym = 0xfe89;
pub const XK_dead_small_schwa: x::Keysym = 0xfe8a;
pub const XK_dead_capital_schwa: x::Keysym = 0xfe8b;

pub const XK_dead_greek: x::Keysym = 0xfe8c;

pub const XK_First_Virtual_Screen: x::Keysym = 0xfed0;
pub const XK_Prev_Virtual_Screen: x::Keysym = 0xfed1;
pub const XK_Next_Virtual_Screen: x::Keysym = 0xfed2;
pub const XK_Last_Virtual_Screen: x::Keysym = 0xfed4;
pub const XK_Terminate_Server: x::Keysym = 0xfed5;

pub const XK_AccessX_Enable: x::Keysym = 0xfe70;
pub const XK_AccessX_Feedback_Enable: x::Keysym = 0xfe71;
pub const XK_RepeatKeys_Enable: x::Keysym = 0xfe72;
pub const XK_SlowKeys_Enable: x::Keysym = 0xfe73;
pub const XK_BounceKeys_Enable: x::Keysym = 0xfe74;
pub const XK_StickyKeys_Enable: x::Keysym = 0xfe75;
pub const XK_MouseKeys_Enable: x::Keysym = 0xfe76;
pub const XK_MouseKeys_Accel_Enable: x::Keysym = 0xfe77;
pub const XK_Overlay1_Enable: x::Keysym = 0xfe78;
pub const XK_Overlay2_Enable: x::Keysym = 0xfe79;
pub const XK_AudibleBell_Enable: x::Keysym = 0xfe7a;

pub const XK_Pointer_Left: x::Keysym = 0xfee0;
pub const XK_Pointer_Right: x::Keysym = 0xfee1;
pub const XK_Pointer_Up: x::Keysym = 0xfee2;
pub const XK_Pointer_Down: x::Keysym = 0xfee3;
pub const XK_Pointer_UpLeft: x::Keysym = 0xfee4;
pub const XK_Pointer_UpRight: x::Keysym = 0xfee5;
pub const XK_Pointer_DownLeft: x::Keysym = 0xfee6;
pub const XK_Pointer_DownRight: x::Keysym = 0xfee7;
pub const XK_Pointer_Button_Dflt: x::Keysym = 0xfee8;
pub const XK_Pointer_Button1: x::Keysym = 0xfee9;
pub const XK_Pointer_Button2: x::Keysym = 0xfeea;
pub const XK_Pointer_Button3: x::Keysym = 0xfeeb;
pub const XK_Pointer_Button4: x::Keysym = 0xfeec;
pub const XK_Pointer_Button5: x::Keysym = 0xfeed;
pub const XK_Pointer_DblClick_Dflt: x::Keysym = 0xfeee;
pub const XK_Pointer_DblClick1: x::Keysym = 0xfeef;
pub const XK_Pointer_DblClick2: x::Keysym = 0xfef0;
pub const XK_Pointer_DblClick3: x::Keysym = 0xfef1;
pub const XK_Pointer_DblClick4: x::Keysym = 0xfef2;
pub const XK_Pointer_DblClick5: x::Keysym = 0xfef3;
pub const XK_Pointer_Drag_Dflt: x::Keysym = 0xfef4;
pub const XK_Pointer_Drag1: x::Keysym = 0xfef5;
pub const XK_Pointer_Drag2: x::Keysym = 0xfef6;
pub const XK_Pointer_Drag3: x::Keysym = 0xfef7;
pub const XK_Pointer_Drag4: x::Keysym = 0xfef8;
pub const XK_Pointer_Drag5: x::Keysym = 0xfefd;

pub const XK_Pointer_EnableKeys: x::Keysym = 0xfef9;
pub const XK_Pointer_Accelerate: x::Keysym = 0xfefa;
pub const XK_Pointer_DfltBtnNext: x::Keysym = 0xfefb;
pub const XK_Pointer_DfltBtnPrev: x::Keysym = 0xfefc;

pub const XK_ch: x::Keysym = 0xfea0;
pub const XK_Ch: x::Keysym = 0xfea1;
pub const XK_CH: x::Keysym = 0xfea2;
pub const XK_c_h: x::Keysym = 0xfea3;
pub const XK_C_h: x::Keysym = 0xfea4;
pub const XK_C_H: x::Keysym = 0xfea5;

#[derive(Eq, PartialEq, Hash)]
pub struct KeyCombo {
    mask: x::KeyButMask,
    key: x::Keysym,
}

impl KeyCombo {
    pub const fn new(mask: x::KeyButMask, key: x::Keysym) -> Self {
        Self { mask, key }
    }

    pub fn mask(&self) -> x::KeyButMask {
        self.mask
    }

    pub fn key(&self) -> x::Keysym {
        self.key
    }
}

pub struct Keymap {
    keysyms: Vec<u32>,
    min_keycode: u8,
    keysyms_per_keycode: u8,
}

impl Keymap {
    pub fn new(keysyms: Vec<u32>, min_keycode: u8, keysyms_per_keycode: u8) -> Self {
        Self {
            keysyms,
            keysyms_per_keycode,
            min_keycode,
        }
    }

    pub fn get_keysym(&self, keycode: u8) -> u32 {
        self.keysyms[(keycode - self.min_keycode) as usize * self.keysyms_per_keycode as usize]
    }

    pub fn get_keycode(&self, keysym: u32) -> u8 {
        for (i, keysyms) in self
            .keysyms
            .chunks(self.keysyms_per_keycode as usize)
            .enumerate()
        {
            if keysyms.contains(&keysym) {
                return self.min_keycode + i as u8;
            }
        }
        0
    }
}
